apiVersion: v1
kind: Namespace
metadata:
  annotations:
    keptn.sh/lifecycle-toolkit: enabled
  name: podtato-kubectl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 2.39.1
  name: prometheus-k8s
  namespace: podtato-kubectl
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 2.39.1
  name: prometheus-k8s
  namespace: podtato-kubectl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: monitoring
---
apiVersion: v1
data:
  servicesConfig.yaml: |
    hat:       "http://podtato-head-hat:8080"
    left-leg:  "http://podtato-head-left-leg:8080"
    left-arm:  "http://podtato-head-left-arm:8080"
    right-leg: "http://podtato-head-right-leg:8080"
    right-arm: "http://podtato-head-right-arm:8080"
kind: ConfigMap
metadata:
  name: podtato-head-discovery
  namespace: podtato-kubectl
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/part-of: podtato-head
  name: podtato-head-frontend
  namespace: podtato-kubectl
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  selector:
    app: podtato-head-frontend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/part-of: podtato-head
  name: podtato-head-hat
  namespace: podtato-kubectl
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  selector:
    app: podtato-head-hat
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/part-of: podtato-head
  name: podtato-head-left-arm
  namespace: podtato-kubectl
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  selector:
    app: podtato-head-left-arm
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/part-of: podtato-head
  name: podtato-head-left-leg
  namespace: podtato-kubectl
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  selector:
    app: podtato-head-left-leg
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/part-of: podtato-head
  name: podtato-head-right-arm
  namespace: podtato-kubectl
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  selector:
    app: podtato-head-right-arm
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/part-of: podtato-head
  name: podtato-head-right-leg
  namespace: podtato-kubectl
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
  selector:
    app: podtato-head-right-leg
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podtato-head-frontend
  namespace: podtato-kubectl
spec:
  selector:
    matchLabels:
      app: podtato-head-frontend
  template:
    metadata:
      labels:
        app: podtato-head-frontend
        app.kubernetes.io/name: podtato-head-frontend
        app.kubernetes.io/part-of: podtato-head
        app.kubernetes.io/version: {{ .Values.frontend.serviceVersion }}
        keptn.sh/post-deployment-tasks: wait-for-monitoring
    spec:
      containers:
      - env:
        - name: PODTATO_COMPONENT
          value: frontend
        - name: PODTATO_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: SERVICES_CONFIG_FILE_PATH
          value: /config/servicesConfig.yaml
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: ghcr.io/podtato-head/podtato-server:v0.3.1
        #args:
        #  - "--version"
        #  - "{{ .Values.frontend.serviceVersion }}"
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: podtato-head-frontend
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi
        volumeMounts:
        - mountPath: /config
          name: service-discovery-map
      volumes:
      - configMap:
          name: podtato-head-discovery
        name: service-discovery-map
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podtato-head-hat
  namespace: podtato-kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: podtato-head-hat
  template:
    metadata:
      labels:
        app: podtato-head-hat
        app.kubernetes.io/name: podtato-head-hat
        app.kubernetes.io/part-of: podtato-head
        app.kubernetes.io/version: 0.1.1
    spec:
      containers:
      - env:
        - name: PODTATO_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: PODTATO_COMPONENT
          value: hat
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: ghcr.io/podtato-head/podtato-server:v0.3.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: podtato-head-hat
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podtato-head-left-arm
  namespace: podtato-kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: podtato-head-left-arm
  template:
    metadata:
      labels:
        app: podtato-head-left-arm
        app.kubernetes.io/name: podtato-head-left-arm
        app.kubernetes.io/part-of: podtato-head
        app.kubernetes.io/version: 0.1.1
    spec:
      containers:
      - env:
        - name: PODTATO_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: PODTATO_COMPONENT
          value: left-arm
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: ghcr.io/podtato-head/podtato-server:v0.3.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: podtato-head-left-arm
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podtato-head-left-leg
  namespace: podtato-kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: podtato-head-left-leg
  template:
    metadata:
      labels:
        app: podtato-head-left-leg
        app.kubernetes.io/name: podtato-head-left-leg
        app.kubernetes.io/part-of: podtato-head
        app.kubernetes.io/version: 0.1.1
    spec:
      containers:
      - env:
        - name: PODTATO_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: PODTATO_COMPONENT
          value: left-leg
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: ghcr.io/podtato-head/podtato-server:v0.3.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: podtato-head-left-leg
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podtato-head-right-arm
  namespace: podtato-kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: podtato-head-right-arm
  template:
    metadata:
      labels:
        app: podtato-head-right-arm
        app.kubernetes.io/name: podtato-head-right-arm
        app.kubernetes.io/part-of: podtato-head
        app.kubernetes.io/version: 0.1.1
    spec:
      containers:
      - env:
        - name: PODTATO_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: PODTATO_COMPONENT
          value: right-arm
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: ghcr.io/podtato-head/podtato-server:v0.3.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: podtato-head-right-arm
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podtato-head-right-leg
  namespace: podtato-kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: podtato-head-right-leg
  template:
    metadata:
      labels:
        app: podtato-head-right-leg
        app.kubernetes.io/name: podtato-head-right-leg
        app.kubernetes.io/part-of: podtato-head
        app.kubernetes.io/version: 0.1.1
    spec:
      containers:
      - env:
        - name: PODTATO_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: PODTATO_COMPONENT
          value: right-leg
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: ghcr.io/podtato-head/podtato-server:v0.3.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: podtato-head-right-leg
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: lifecycle.keptn.sh/v1alpha3
kind: KeptnApp
metadata:
  name: podtato-head
  namespace: podtato-kubectl
spec:
  postDeploymentTasks:
  - post-deployment-loadtests
  version: 0.1.1
  workloads:
  - name: podtato-head-left-arm
    version: 0.1.1
  - name: podtato-head-frontend
    version: {{ .Values.frontend.serviceVersion }}
  - name: podtato-head-right-arm
    version: 0.1.1
  - name: podtato-head-hat
    version: 0.1.1
  - name: podtato-head-left-leg
    version: 0.1.1
  - name: podtato-head-right-leg
    version: 0.1.1
---
apiVersion: lifecycle.keptn.sh/v1alpha3
kind: KeptnTaskDefinition
metadata:
  name: post-deployment-loadtests
  namespace: podtato-kubectl
spec:
  container:
    env:
    - name: URL
      value: http://podtato-head-frontend.podtato-kubectl:8080
    - name: WAIT_TIME_BETWEEN_REQUESTS_MS
      value: "200"
    image: docker.io/bacherfl/load-generator-a9e58517073467f96d2957f7b12fcc26@sha256:18b07e4724238b94d2bcbcaff5e1b053cf7cae15bd41b032ca7b97803ea3487c
    name: loadtest
---
apiVersion: lifecycle.keptn.sh/v1alpha3
kind: KeptnTaskDefinition
metadata:
  name: wait-for-monitoring
  namespace: podtato-kubectl
spec:
  container:
    env:
    - name: PROMETHEUS_URL
      value: http://prometheus-k8s.monitoring.svc.cluster.local:9090/api/v1/targets
    - name: TARGET_SERVICE_LABEL
      value: podtato-head-frontend
    image: docker.io/bacherfl/check-prometheus-target-7bdba90d6553e656a9cbbf7338b9bbe9@sha256:1fe6078b7046a6efb907ffd1124fefbce9a531d3181c216375879485c22ebaf4
    name: wait-for-monitoring
---
apiVersion: metrics.keptn.sh/v1alpha3
kind: AnalysisDefinition
metadata:
  name: my-analysis-definition
  namespace: podtato-kubectl
spec:
  objectives:
  - analysisValueTemplateRef:
      name: response-time-p95
    keyObjective: false
    target:
      failure:
        greaterThan:
          fixedValue: 500m
      warning:
        greaterThan:
          fixedValue: 300m
    weight: 1
  - analysisValueTemplateRef:
      name: error-rate
    keyObjective: true
    target:
      failure:
        greaterThan:
          fixedValue: 0
    weight: 1
  totalScore:
    passPercentage: 60
    warningPercentage: 50
---
apiVersion: metrics.keptn.sh/v1alpha3
kind: AnalysisValueTemplate
metadata:
  name: cpu-usage
  namespace: podtato-kubectl
spec:
  provider:
    name: dql-provider
  query: 'timeseries from:-10d,usage=avg(dt.host.cpu.usage),default:0.0, bins: 1'
---
apiVersion: metrics.keptn.sh/v1alpha3
kind: AnalysisValueTemplate
metadata:
  name: error-rate
  namespace: podtato-kubectl
spec:
  provider:
    name: my-provider
  query: rate(http_requests_total{status_code="500", job="{{.workload}}"}[1m]) or
    on() vector(0)
---
apiVersion: metrics.keptn.sh/v1alpha3
kind: AnalysisValueTemplate
metadata:
  name: response-time-p95
  namespace: podtato-kubectl
spec:
  provider:
    name: my-provider
  query: {{ printf "histogram_quantile(0.95, sum by(le) (rate(http_server_request_latency_seconds_bucket{job='{{.workload}}'}[1m])))" }}
---
apiVersion: metrics.keptn.sh/v1alpha3
kind: KeptnMetricsProvider
metadata:
  name: dql-provider
  namespace: podtato-kubectl
spec:
  secretKeyRef:
    key: CLIENT_SECRET
    name: dt-third-gen-secret-test-tenant
  targetServer: http://mockserver.mockserver.svc.cluster.local:1080
  type: dql
---
apiVersion: metrics.keptn.sh/v1alpha3
kind: KeptnMetricsProvider
metadata:
  name: my-provider
  namespace: podtato-kubectl
spec:
  targetServer: http://prometheus-k8s.monitoring.svc.cluster.local:9090
  type: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: podtato-head
  namespace: monitoring
spec:
  endpoints:
  - interval: 30s
    port: http
  namespaceSelector:
    matchNames:
    - podtato-kubectl
  selector:
    matchLabels:
      app.kubernetes.io/part-of: podtato-head
